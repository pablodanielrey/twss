Ejercicio 5: Enriqueciendo información con Web of Data
En este ejercicio vamos a enriquecer la información que fue generando a lo largo de la asignatura relacionada al cine. La idea es que utilice consultas SPARQL sobre Wikidata y DBpedia para enriquecer sus bases de conocimiento 
(los archivos .ttl) con los resultados de esas consultas.

Enriquezca la información de su base de conocimiento obteniendo por cada persona (teniendo en cuenta la clase que utilizó para modelar personas) todas las tripletas que posee wikidata y DBpedia respecto a las mismas. 
Puede comenzar utilizando una consulta con las personas que poseen el mismo nombre. Por ejemplo, si su base de conocimiento incluye a "Keanu Reeves", detecte en Wikidata (y DBpedia en otra consulta) aquellos recursos que posean como nombre 
el valor "Keanu Reeves" y todas las tripletas en las que ese recurso sea el sujeto. Documente la/s consulta/s SPARQL que utilizó a tal fin.  En relación a esto, responda:




¿Es suficiente utilizar el nombre?

no, ya que el nombre se asocia con mas personas en algunos casos.
el mismo nombre después se relaciona con distintas personas. por lo que debemos como mínimo chequear las ocupaciones
para analizar si puede ser una persona asociada a la industria filmatográfica.
en el ejercicio el datasource de dbpedia no me dá una forma automática. por lo que decidí hacer un procesado manual.
en wikidata si me lo permite ya que las ocupaciones tienen clases y tipos.


¿Necesita utilizar mas características para asegurar que el concepto de Wikidata (DBpedia) sea la persona que usted desea buscar?

si, la ocupación como mínimo.
como mi dataset se produjo con personas que o son actores o directores puedo filtrar usando esas ocupaciones.
ultilicé una estrategia que solo es posible en mi dataset. pero no es trasnferible a cualquier solución.
o sea tengo "harcodeado" que son personas relacionadas con la industria cinematográfica.


¿Para otros tipos de recursos que tengan algo como nombre o título, piensa que alcanzaría esa estrategia?

depnde del contexto y las ontologías de las cuales necesitamos traer los datos.
en este caso si bien tengo la misma información, se representa de formas dinstintas en cada ontología.
dbpedia me implicó un filtraod manual.
wikidata me permitía hacerlo mediante sparql.
pero claramente una estrategia para realizarlo en el ámbito de la web semántica es agregar filtros a las consultas sparql.
se me ocurre que en algunos casos de ontologías totalmente planas y sin relaciones, es imposible filtrar mucho usando, justamente por 
la forma en que está estructurada la ontología y también el tipo de "curado" que se le realiza. de nada sirve tener filtros si los datos no están estructurados.
me parece que esta estrategia funciona si es que se mantiene la calidad del dataset a filtrar (los individuals) con respecto a su definición (ontología). mediante herraminetas automáticas o manualmente.
creo que una de las herramineas mas poderosas que tiene esta forma de representar conocimiento es justamente poder filtrar por "estructura" de un subgrafo, dentro del dataset que estoy consultando.


Defina y agregue a su base de conocimiento la object property wasDirectedByOscarWinner que relaciona a una actriz/actor de su base de conocimiento con otra persona si:
a) la primera actuó en una película dirigida por la segunda, y 
b) la segunda recibió un premio Oscar (en cualquier categoría). 

Utilice Wikidata/DBPedia para obtener la información.  Muestre la consulta que utilizó para eso.

En este ejercicio vamos a enriquecer la información que fue generando a lo largo de la asignatura relacionada al cine. La idea es que utilice consultas SPARQL sobre Wikidata y DBpedia para 
enriquecer sus bases de conocimiento (los archivos .ttl) que con los resultados de esas consultas.

En comparación con el TP anterior (donde enriqueció en base a dereferenciación de URLs), ¿Qué diferencias, ventajas y desventajas le encuentra al uso de SPARQL?. Si utilizó alguna librería específica comente brevemente 
las ventajas que encontró, y cómo le ayudo en su solución. 
