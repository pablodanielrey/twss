-------------- dbpedia ---------------

Lea el artículo y responda:

1. ¿Qué es dbpedia?

un proyecto que se generó para estructurar la información que existe en wikipedia. 
la idea del proyecto es formalizar mediante una ontología la información publicada. 
sacando textualmente del artículo que publicaron en el foro.
"la disponibilidad de conjuntos de datos estructurados que formalizan y estructuran dicho conocimiento supone una herramienta de incalculable valor"
la ontología está pensada como una ontología universal, no está basada en la estructura de wikipedia.

2. ¿De donde sale la información disponible en dbpedia?

dbpedia la scrapea de wikipedia mediante bots automáticos, que corren cada cierto tiempo.
y la información adaptada por la comunidad de dbpedia a su ontología.
existen distintos tipos de mapeo automático que se realiza.
mapeo del infobox - extracción basada en mapeos manuales.
extracción del infobox automática - cuando no existe el mapeo anterior, se trata de automáticamente extraer de forma autormática.
extracción de características - características específicas como las coordenadas geográficas, etc.
extracción estadística - basada en procesamiento del lenguaje natural.

3. ¿Que partes de los artículos de Wikipedia se transforman en tripletas?

en mayor medida los infobox. ya que contienen información un poco mas estructurada.
y algunas otras partes de los artículos mediante los extractores NLP.

4. ¿Cual es el esquema de URIs que utiliza dbpedia? 

hasta el 2011 solo el namespace principal era http://dbpedia.org/
http://dbpedia.org/resource/
http://dbpedia.org/property/
http://dbpedia.org/ontology/
y para el namespace resource usa el título del artículo de wikipedia en inglés para la iri del recurso.
posteriormente se incorporó los namespaces localizados.
que almacenan la info localizada + un dataset estandarizado (en inglés)
http://<lang>.dbpedia.org/resource/
http://<lang>.dbpedia.org/property/
y la parte estandarizada para la cual existen versiones en inglés de la wiki.
para todos estos namespaces la iri del recurso al que se asocian los datos están representados en un término agnóstico del lenguaje dentro de
http://dbpedia.org/resource/

5. ¿Dado el articulo en Wikipedia de "National University of La Plata", como infiero la URL del recurso correspondiente en dbpedia? ¿Cuál sería para Argentina? ¿Y para Uruguay? (exprese su respuesta aprovechando el prefijo dbr:  para referirse a http://dbpedia.org/resource/)

se toma la url del artículo de wikipedia y se usa esa url dentro del espacio de nombres http://dbpedia.org/resource/
después de buscar en wikipedia:

https://es.wikipedia.org/wiki/Uruguay
https://en.wikipedia.org/wiki/National_University_of_La_Plata

dbr:National_University_of_La_Plata
dbr:Uruguay


6. ¿cuál es la diferencia entre las propiedades definidas en dbo: y las propiedades definidas en dbp:? 

dbo = propiedades extraídas mediante el mapping definido a la ontología de dbpedia - mucho mas confiables!!!
dbp = propiedades extraídas mediante el procesamiento raw de los infoboxes. - menos confiables

7.  ¿Cuantas clases y cuantas propiedades tiene la ontología de dbpedia de acuerdo a lo reportado en el artículo?

320 clases y 1650 propiedades según el artículo.
aunque en un chequeo muy rápido se ve que existen varias mas. unos 780 href donde casi todos corresponden con una clase de la ontología.

pablo@xiaomi:/src/github/facu-infor/twss$ curl http://mappings.dbpedia.org/server/ontology/classes/ | grep href | wc
    780    9072  157832



8. ¿En que URL puedo ver el listado completo de Clases en la ontología de dbpedia?  

http://mappings.dbpedia.org/server/ontology/classes/


---

Ejercicio 2: Explorar el endpoint Sparql de dbpedia
Con la siguiente consulta sparql que obtiene todas las propiedades en dbpedia para la UNLP, explore la funcionalidad del editor de queries Sparql de dbpedia.

 El editor de queries se encuentra disponible en http://dbpedia.org/sparql

select ?property ?object where {
 dbr:National_University_of_La_Plata ?property ?object.
}
Explore:

Los distintos formatos para los resultados
Los prefijos de namespaces ya definidos (link de arriba a la derecha)
(opcional) El editor de queries iSparql (link de arriba a la derecha) 
Responda:

1 . En la pantalla que muestra resultados de queries en HTML, ¿qué pasa cuando hace click en una URI que pertenece al dominio dbpedia.org? 
¿qué pasa si la URI está afuera? 
¿A que cree que se debe la diferencia en comportamiento? (recuerde que la clickear la URI estamos dereferenciando el recurso, como discutimos en la clase respecto a Linked Data)

 
 en este caso hace falta analizar 2 tipos de iris.
 por un lado tenemos las propiedades resultantes de la consulta, y por otro lado tenemos las iris de los objetos (o sea el valor)
 todos aplicados al recurso de la Universidad dentro de dbpedia.
 la descripción del proceso de chequeo se encuentra en notes_random.txt para no llenar este documento de mucha info accesoria.

 para el caso de las iris de las propieades.
 las iris internas de dbpedia.org, tenemos que tienen presencia web. al desreferenciar sus iris llegamos a datos que contienen una representación para una máquina.
 en las iris de las propieadades de otros dominios no siempre pasa esto. por lo que analizo el caso normal es que NO pase esto. que no sean desreferenciables.

 para el caso de los objetos pasa algo similar:
 para los objetos que son iris, las internas a dbpedia tienen presencia web y se pueden desreferenciar.
 para otros objetos no siempre es el caso, 
 http://viaf.org/viaf/146084247 si tiene.
 http://rdf.freebase.com/ns/m.07_yzv no tiene.

 en resumen, todo lo referenciado dentro de dbpedia parece que tiene presencia web y puede ser interpertado por una máquina.
 lo demás no siempre, y el caso general es que no lo sea, por una u otra razón. (expiran los dominios y no los renuevan, nunca los registraron o las iris usadas no son directamente desrefereciables, si no que publican la ontología en una mas general, etc)

---

la url de la interface de consulta iSparql
https://dbpedia.org/isparql/

está mejor para alquien que no sabe sparql. ya que tenes listbox que te agregan al texto varios constructs de sparql
ej te arma el template de la consulta select.




----

Ejercicio 3: Realizar consultas Sparql en dbpedia
Para cada caso reporte la consulta sparql correspondiente y el resultado de la misma. En las consultas, de preferencia al uso de clases y propiedades en la ontología de dbpedia (dbo) 

PARA LAS RESPUESTAS DE LAS CONSULTAS, APROVECHO QUE PUEDO EXPORTARLO A SCV Y LAS DEJO DENTRO DE LA ENTREGA.
dentro de la carpeta respuestas/

a) Obtener a los escritores que hayan nacido en una ciudad de Argentina. 

SELECT DISTINCT ?s
			WHERE
			{
                ?s dbo:birthPlace dbr:Argentina .
                ?s rdf:type dbo:Writer .
			}

otra respuesta podría ser (pero en notes_random.txt explico por que no la elegí)

SELECT DISTINCT ?s
			WHERE
        {
			?s ?p ?o .
            ?o rdf:type dbo:Book .
            ?o dbo:author ?s .
            ?s dbo:birthPlace ?c .
            ?c dbo:country dbr:Argentina .
        }



b) Obtener a los escritores que hayan nacido en una ciudad de Uruguay.

SELECT DISTINCT ?s
			WHERE
			{
                ?s dbo:birthPlace dbr:Uruguay .
                ?s rdf:type dbo:Writer .
			}

por lo que veo dbpedia infiere siempre cuando tiene la info de la ciudad. le pone también la info del país 
en birthPlace.


c) Utilizando el keyword filter (vea sección 6.3.2.6 del libro), obtener a los escritores que hayan nacido en una ciudad de Argentina o de Uruguay 

asumiendo que las consultas de arriba están ok entonces la versión con filter sería.

SELECT DISTINCT ?s
			WHERE
			{
                ?s dbo:birthPlace ?pais .
                ?s rdf:type dbo:Writer .
                filter (?pais = dbr:Argentina || ?pais = dbr:Uruguay) .
			}


d) Utilizando el keyword union (vea sección 6.3.2.6 del libro), obtener a los escritores que hayan nacido en una ciudad de Argentina o de Uruguay

SELECT DISTINCT ?s
			WHERE
			{
                ?s rdf:type dbo:Writer .
                { ?s dbo:birthPlace dbr:Argentina . }
                UNION 
                { ?s dbo:birthPlace dbr:Uruguay .}
			}


e) ¿Qué diferencia hay entre c y d? ¿En cual se deben recuperar/analizar menor número de tripletas?

asumo que la union analiza mayor número de tripletas.
si pensamos que  para obtener la union de los conjuntos hay que procesar los 2 conjuntos primero.
en pseudocódigo:

c1 = for autor in autores if autor dbo:birthPlace dbr:Argentina
c2 = for autor in autores if autor dbo:birthPlace dbr:Uruguay
c3 = c1 + c2

entonces se procesaría el dataset de autores 2 veces. (la variable ?s)

para el caso del filter el if va adentro del "for"

c3 = for autor in autores if autor dbo:birthPlace or autor dbo:birthPlace

en este caso se recorre solamente 1 vez el dataset de autores.



f) ¿Cuantos empleados tiene la compañía mas grande en dbpedia, y en que país está ubicada? (obtenga la lista de todas las compañías y los países donde están ubicadas ordenada de forma descendiente por numero de empleados)

http://dbpedia.org/resource/Eureka_Forbes ---> 5000000
totalmente una sorpresa!!.

SELECT DISTINCT ?s ?l ?n
			WHERE
			{
                ?s rdf:type dbo:Company .
                ?s dbo:location ?l .
                ?l rdf:type dbo:Country .
                OPTIONAL
                {
                ?s dbo:numberOfEmployees ?n
                }
			}
            order by desc(?n)

esto funciona ya que evidenemente dbpedia infiere siempre el pais y genera la tripleta para location siempre con el país.
asi que si consulto por paises anda bien.
